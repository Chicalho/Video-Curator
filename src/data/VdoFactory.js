import IdGenerator from "uuid/v1";

var VdoFactory = {};

VdoFactory.createVideoDefinitionObject = function(file){

    var vdo = {
        id:0,                       //unique id
        filePath:"/",               //relative url of video, uses file.webkitRelativePath
        fileUrl:"/",                //blob url, generated by using URL.createObjectURL(file)
        fileName:"Untitled.mp4",    //name of file, uses file.name
        fileSize:0,                 //size of file, uses file.size
        name:"Untitled",            //name of video, manually set
        type:"None",                //types: None, Movie, Scene, Clip
        movieId:"Untitled",         //movie id (to group scenes of the same movie)
        studios:["Untagged"],	    //studio name
        series:["Untagged"],	    //series name
        actors:["Untagged"],	    //actor tags
        tags:["Untagged"],		    //other tags
        watched:0,				    //number of times watched
        lastWatched:0,			    //date in milisec last time hit play
        dateCreated:0,			    //date in milisec when added to database
        rating:0,				    //rating, 1 thumbs down, 3 thumbs up, 2 neutral
        stills:[],				    //array with urls of still photo screenshots
        noFile: false,              //marks VDO to remove (no matching file in operating system)
        conflict: {                 // marks file for conflict (vdo was not updated, several vdos point to same file based on size alone)
            exists:false,
            similarVdos:[],
            matchingFiles:[]
        }
    };
    
    vdo.id            = IdGenerator();
    vdo.fileUrl       = URL.createObjectURL(file);
    vdo.filePath      = file.webkitRelativePath;
    vdo.fileName      = file.name;
    vdo.fileSize      = file.size;
    vdo.dateCreated   = new Date();
    
	return vdo;
}

export default VdoFactory;